---
name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'

jobs:
  test:
    name: Test

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        node: [20]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Node and NPM versions
        run: |
          node --version
          npm --version
      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run lint
      - run: npm run check
      - run: npm run type-check
      - run: npm run build
      - run: npm run prettier:check # Style check is least important - Split into seperate jobs later?

  publish:
    name: Build and publish image

    runs-on: ubuntu-latest

    if: contains(github.ref, 'refs/tags/v')

    needs:
      - test

    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    outputs:
      imageDeployTag: ${{ steps.deploymentTag.outputs.deployTag }}

    steps:
      - uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # For default priorities, see
          # https://github.com/docker/metadata-action/blob/8d56fe93cf3fd680736a906389438c1ed74d75f7/src/tag.ts#L43
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},priority=10000
            type=semver,pattern={{major}}.{{minor}}
            type=sha,priority=9000

      - name: Set deployment tag
        id: deploymentTag
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          echo "All extracted tags:"
          echo "${TAGS}"
          echo ""

          DEPLOY_TAG=$(echo ${TAGS} | cut -d' ' -f 1)
          echo "Deployment tag: ${DEPLOY_TAG}"

          # Set output parameters.
          echo "deployTag=${DEPLOY_TAG}" >> "$GITHUB_OUTPUT"

      - name: Login to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set ENV VARs for build
        env:
          DEPLOY_TAG: ${{ steps.deploymentTag.outputs.deployTag }}
        run: |
          echo "GIT_SHA_FULL=$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "VERSION_TAG=$(echo $DEPLOY_TAG | rev | cut -d':' -f 1 | rev)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            GIT_SHA_FULL
            VERSION_TAG
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
